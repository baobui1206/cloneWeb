.header {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 10;
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0));
  transition: background 0.15s ease;
  .header__child {
    display: grid;
    grid-template-columns: 3fr 9fr;
    align-items: center;
    column-gap: 20px;
    padding: 12px 0;
    //
    .header--logo {
      display: flex;
      align-items: center;
      column-gap: 20px;
      a img {
        width: auto;
        height: 74px;
        @include container-xxl() {
          height: 64px;
        }
        @include container-lg() {
          height: 45px;
        }
      }
    }
    .nav--menu {
      display: flex;
      align-items: center;
      column-gap: 20px;
      justify-content: flex-end;
    }
    .header--menu {
      display: flex;
      align-items: center;
      justify-content: space-between;
      flex-grow: 1;
      column-gap: 16px;
      @include container-lg() {
        &__item:not(.header--control) {
          display: none;
        }
        justify-content: flex-end;
      }
      &__item {
        &:not(:first-child) a {
          padding: 5px 0 14px;
        }
        &:not(:first-child) a::after {
          opacity: 0;
          visibility: hidden;
        }
        &:first-child a {
          padding: 3px 0 10px;
        }
        a {
          position: relative;
          display: inline-block;
          font-size: 1.8rem;
          @include container-xxl() {
            font-size: 1.6rem;
          }
          white-space: nowrap;
          font-weight: 600;
          color: white;
          &::after {
            content: "";
            position: absolute;
            left: 0;
            bottom: 0;
            width: 100%;
            height: 2px;
            background: white;
            transition: all 0.2s linear;
          }
          &:hover {
            &::after {
              opacity: 1;
              visibility: visible;
            }
          }
          svg {
            width: 22px;
            height: 22px;
            stroke: white;
          }
        }
      }

      // header control
      .header--control {
        display: flex;
        align-items: center;
        column-gap: 21px;
        padding-bottom: 9px;
        // @include container-lg() {
        //   column-gap: 16px;
        // }
        //   padding-top: 12px;
        .control--languge {
          display: flex;
          align-items: center;
          column-gap: 6px;
          span {
            font-size: 1.8rem;
            text-transform: uppercase;
            color: white;
          }
          svg {
            width: 12px;
            height: 12px;
            fill: white;
          }
        }
        .control--search {
          cursor: pointer;
          svg {
            width: 18px;
            height: 18px;
            stroke: white;
          }
        }
        .menu--bar {
          --timeRun: 2s;
          --sizeLine: 1px;
          position: relative;
          width: 32px;
          height: 32px;
          display: none;
          align-items: center;
          justify-content: center;
          background: #721114;
          border-radius: 2px;
          cursor: pointer;
          .top,
          .bottom,
          .left,
          .right {
            position: absolute;
            background: white;
            box-shadow: 0 0 1px #fff, 0 0 1px #fff, 0 0 4px #fff;
            // box-shadow: 0 0 4px rgba(255, 255, 255, 0.3);
            // animation-delay: calc(var(--i) * (1s / ));
          }
          .top,
          .bottom {
            // width: 100%;
            height: var(--sizeLine);
          }

          .left,
          .right {
            // height: 100%;
            width: var(--sizeLine);
          }
          // 4 hướng
          .top {
            left: 0;
            top: 0;
            animation: animateTop var(--timeRun) linear infinite
              calc(((var(--timeRun) / 2) / 2) * 1);
          }
          .bottom {
            bottom: 0;
            right: 0;
            animation: animateBottom var(--timeRun) linear infinite
              calc(((var(--timeRun) / 2) / 2) * 3);
          }
          .left {
            left: 0;
            bottom: 0;
            animation: animateLeft var(--timeRun) linear infinite;
          }
          .right {
            right: 0;
            top: 0;
            animation: animateRight var(--timeRun) linear infinite
              calc(((var(--timeRun) / 2) / 2) * 2);
          }

          @keyframes animateLeft {
            0% {
              top: 100%;
              height: 0%;
            }
            25% {
              top: 0;
              height: 100%;
            }
            50% {
              top: 0;
              height: 0%;
            }
          }

          @keyframes animateTop {
            0% {
              left: 0;
              width: 0%;
            }
            25% {
              left: 0;
              width: 100%;
            }
            50% {
              left: calc(100% - 1px);
              width: 0%;
            }
          }

          @keyframes animateRight {
            0% {
              top: 0;
              height: 0%;
            }
            25% {
              top: 0;
              height: 100%;
            }
            50% {
              top: calc(100% - 1px);
              height: 0%;
            }
          }

          @keyframes animateBottom {
            0% {
              right: 0;
              width: 0%;
            }
            25% {
              right: 0;
              width: 100%;
            }
            50% {
              right: calc(100% - 1px);
              width: 0%;
            }
          }

          @include container-lg() {
            display: flex;
          }
          svg {
            width: 24px;
            height: 24px;
            stroke: white;
          }
        }
      }
    }
  }
}

//
.active--header {
  position: fixed;
  background: rgba(128, 22, 24, 1);
  top: 0;
  left: 0;
  animation: animateHeader 0.3s linear;
  @keyframes animateHeader {
    from {
      transform: translateY(-100%);
    }
    to {
      transform: translateY(0%);
    }
  }
}

.out--header {
  position: fixed;
  top: 0;
  left: 0;
  animation: animateOutHeader 0.3s linear;
  @keyframes animateOutHeader {
    from {
      transform: translateY(0%);
    }
    to {
      transform: translateY(-100%);
    }
  }
}
